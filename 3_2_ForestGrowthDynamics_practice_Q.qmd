---
title: "Forest growth and dynamics (practice)"
format:
  revealjs:
    incremental: true
    smaller: false
    logo: resources/img/emf_logo.svg
    theme: [default, resources/scss/custom.scss]
editor: visual
author: "Miquel De CÃ¡ceres, Rodrigo Balaguer"
institute: "Ecosystem Modelling Facility, CREAF"
toc: false
toc-depth: 2
number-sections: false
slide-number: true
progress: true
---

## Outline

::::: columns
::: {.column width="50%"}
#### 1. Forest growth inputs

#### 2. Running forest growth

#### 3. Evaluation of growth predictions

#### 4. Forest dynamics
:::

::: {.column width="40%"}
M.C. Escher - Up and down, 1947

![](resources/img/Escher_updown.jpg)
:::
:::::

```{r, include = FALSE}
library(medfate)
library(ggplot2)
```

# 1. Forest growth inputs

## Creating the forest growth input object

We assume we have an appropriate forest object:

```{r, echo = TRUE}
data(exampleforest)
```

. . .

a species parameter data frame:

```{r, echo = TRUE}
data(SpParamsMED)
```

. . .

a soil data frame:

```{r, echo = TRUE}
examplesoil <- defaultSoilParams(4)
```

. . .

and simulation control list:

```{r, echo = TRUE}
control <- defaultControl("Granier")
```

. . .

With these four elements we can build our input object for function `growth()`:

```{r, echo = TRUE}
x <- forest2growthInput(exampleforest, examplesoil, SpParamsMED, control)
```

::: footer
1.  Forest growth inputs
:::

## Structure of the growth input object (1)

The growth input object is a `list` with several elements:

```{r, echo = TRUE}
names(x)
```

. . .

Element `above` contains the above-ground structure data that we already know, but with an additional column `SA` that describes the estimated initial amount of *sapwood area*:

```{r}
x$above
```

::: footer
1.  Forest growth inputs
:::

## Structure of the growth input object (2)

Elements starting with `params*` contain cohort-specific model parameters. An important set of parameters are in `paramsGrowth`:

```{r}
x$paramsGrowth
```

. . .

Elements starting with `internal*` contain state variables required to keep track of plant status. For example, the metabolic and storage carbon levels can be seen in `internalCarbon`:

```{r}
x$internalCarbon
```

::: footer
1.  Forest growth inputs
:::

# 2. Forest growth

## Forest growth run {.smaller}

The call to function `growth()` needs the growth input object, the weather data frame, latitude and elevation:

```{r, echo = TRUE, eval = TRUE, highlight.output=8:13}
G <- growth(x, examplemeteo, latitude = 41.82592, elevation = 100)
```

::: footer
2.  Forest growth
:::

## Growth output object {.smaller}

Function `growth()` returns an object of class with the same name, actually a list:

```{r, echo = TRUE}
class(G)
```

. . .

... whose elements are:

```{r, echo = TRUE}
names(G)
```

. . .

| Elements | Information |
|----|----|
| `latitude`, `topography`, `weather`, `growthInput` | Copies of the information used in the call to `growth()` |
| `growthOutput` | State variables at the end of the simulation (can be used as input to a subsequent one) |
| `WaterBalance`, `Soil`, `Snow`, `Stand`, `Plants` | \[same as `spwb` ...\] |
| `CarbonBalance` | Stand-level carbon blance |
| `LabileCarbonBalance` | Components of the individual-level labile carbon balance |
| `PlantBiomassBalance` | Components of indvidual- and cohort-level biomass balance |
| `PlantStructure` | Structural variables (DBH, height, sapwood area...) |
| `GrowthMortality` | Growth and mortality rates |

::: footer
2.  Forest growth
:::

## Post-processing {.smaller}

Users can inspect the output of `growth()` simulations using functions `extract()`, `summary()` and `plot()` on the simulation output.

. . .

Several new plots are available in addition to those available for `spwb()` simulations (see `?plot.growth`). For example:

```{r, echo=TRUE, fig=TRUE, fig.width=8, fig.height = 3.5}
plot(G, "MaintenanceRespiration", bySpecies = TRUE)
```

. . .

... but instead of typing all plots, we can call the interactive plot function `shinyplot()`.

::: footer
2.  Forest growth
:::

------------------------------------------------------------------------

M.C. Escher - Up and down, 1947

![](resources/img/Escher_updown.jpg)
